{"version":3,"sources":["components/Navbar.js","components/CreateTask.js","components/Task.js","components/ContainerTask.js","components/Modal.js","components/ManageTasks.js","index.js"],"names":["Navbar","className","CreateTask","taskId","useState","taskTitle","setTaskTitle","taskDescription","setTaskDescription","handlerSubmit","e","a","url","config","method","headers","body","JSON","stringify","id","title","description","fetch","then","res","json","data","console","log","catch","err","preventDefault","target","reset","onSubmit","type","placeholder","onChange","value","Task","setDataModal","scope","onClick","display","task","window","confirm","info","error","ContainerTask","setTasks","tasks","setTaskId","useEffect","length","undefined","map","_id","Modal","dataModal","style","background","newTitle","setNewTitle","newDescription","setNewDescription","configFetch","form","ManageTasks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0622f2d6.chunk.js","sourcesContent":["// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n\nexport default function Navbar() {\n  return (\n    <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n      <div className='container-fluid'>\n        <span className='navbar-brand'>MERNstack</span>\n      </div>\n    </nav>\n  );\n}\n","\r\nimport { useState } from \"react\";\r\n\r\nexport default function CreateTask({ taskId }) {\r\n  let [taskTitle, setTaskTitle] = useState();\r\n  let [taskDescription, setTaskDescription] = useState();\r\n  function CreateTask(url, config) {\r\n    fetch(url, config)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .catch((err) => err);\r\n  }\r\n  const handlerSubmit = async (e) => {\r\n    CreateTask(\"http://localhost:5000/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: taskId,\r\n        title: taskTitle,\r\n        description: taskDescription,\r\n      }),\r\n    });\r\n    e.preventDefault();\r\n    e.target.reset();\r\n  };\r\n  const handlerChangeInput = (e) => {\r\n    setTaskTitle((taskTitle = e.target.value));\r\n    // console.log(taskTitle);\r\n  };\r\n\r\n  const handlerChangeTextarea = (e) => {\r\n    setTaskDescription((taskDescription = e.target.value));\r\n    // console.log(taskDescription);\r\n  };\r\n\r\n  return (\r\n    <div className='container mt-3'>\r\n      <form onSubmit={handlerSubmit}>\r\n        <input\r\n          className='form-control mb-3'\r\n          type='text'\r\n          placeholder='add the task name:'\r\n          onChange={handlerChangeInput}\r\n        />\r\n        <textarea\r\n          className='form-control mb-3'\r\n          placeholder='add the task description:'\r\n          onChange={handlerChangeTextarea}\r\n        />\r\n        <button className='btn btn-primary rounded' type='submit'>\r\n          Create\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export default function Task({ title, id, description, setDataModal }) {\r\n  function editById() {\r\n    setDataModal({ display: \"block\", task: { id, title, description } });\r\n  }\r\n  function deleteById(e) {\r\n    let confirm = window.confirm(`are you delete the task: ${id}`);\r\n    if (confirm) {\r\n      fetch(`http://localhost:5000/delete/${id}`, { method: \"DELETE\" })\r\n        .then((res) => res.json())\r\n        .then((info) => info)\r\n        .catch((err) => console.error(err));\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <tr className='container m-4'>\r\n      <th scope='row'>{id}</th>\r\n      <td>{title}</td>\r\n      <td>{description}</td>\r\n      <td>\r\n        <button className='btn btn-warning me-2' onClick={editById}>\r\n          Change\r\n        </button>\r\n        <form onSubmit={deleteById} className='d-inline-block'>\r\n          <button type='submit' className='btn btn-danger'>\r\n            Delete\r\n          </button>\r\n        </form>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nexport default function ContainerTask({ setTasks, tasks, setTaskId, setDataModal}) {\r\n  function GetAllTasks(url) {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (!data.error) {\r\n          setTasks(data);\r\n          setTaskId(data[data.length - 1].id + 1);\r\n        }\r\n      })\r\n      .catch((err) => err);\r\n  }\r\n  useEffect(() => {\r\n    GetAllTasks(\"http://localhost:5000\");\r\n  });\r\n\r\n  return (\r\n    <section className='container mt-4'>\r\n      <table className='table table-dark'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>#</th>\r\n            <th scope='col'>title</th>\r\n            <th scope='col'>description</th>\r\n            <th scope='col'>options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks === undefined ? (\r\n            <tr className=\"table-danger\">\r\n              <th scope='row'>?</th>\r\n              <th>any title task</th>\r\n              <th>any description task</th>\r\n              <th>you need create a task</th>\r\n            </tr>\r\n          ) : (\r\n            tasks.map((task) => {\r\n              return (\r\n                <Task\r\n                  key={task._id}\r\n                  id={task.id}\r\n                  title={task.title}\r\n                  description={task.description}\r\n                  setDataModal={setDataModal}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nexport default function Modal({ dataModal, setDataModal }) {\r\n  const style = { display: dataModal.display, background: \"#00000090\" };\r\n  let [newTitle, setNewTitle] = useState();\r\n  let [newDescription, setNewDescription] = useState();\r\n  const handlerSubmit = (e) => {\r\n    const url=`http://localhost:5000/update/${dataModal.task.id}`;\r\n    const configFetch ={\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        title: newTitle,\r\n        description: newDescription\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    }\r\n    fetch(url,configFetch ).then(res=>res.json()).then(info=>{console.log(info)}).catch(err=>err);\r\n    setDataModal({\r\n      display: \"none\",\r\n      task: { id: \"\", title: \"\", description: \"\" },\r\n    })\r\n    e.preventDefault();\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <div className='modal' style={style}>\r\n      <div className='modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable'>\r\n        <div className='modal-content'>\r\n          <div className='modal-header bg-dark'>\r\n            <h5 className='modal-title text-white'>\r\n              You are going to change the task: {dataModal.task.id}\r\n            </h5>\r\n            <button\r\n              type='button'\r\n              className='btn-close btn-close-white'\r\n              onClick={() => {\r\n                setDataModal({\r\n                  display: \"none\",\r\n                  task: { id: \"\", title: \"\", description: \"\" },\r\n                });\r\n              }}></button>\r\n          </div>\r\n          <div className='modal-body'>\r\n            <div className='container'>\r\n              <span>Before:</span>\r\n              <table className='table'>\r\n                <thead>\r\n                  <tr>\r\n                    <th scope='col'>#</th>\r\n                    <th scope='col'>title</th>\r\n                    <th scope='col'>description</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{dataModal.task.id}</td>\r\n                    <td>{dataModal.task.title}</td>\r\n                    <td>{dataModal.task.description}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <hr></hr>\r\n            <form\r\n              id='changeForm'\r\n              className='container'\r\n              onSubmit={handlerSubmit}>\r\n              <div className='mb-3'>\r\n                <span>Change:</span>\r\n                <label className='container'>\r\n                  New title:\r\n                  <input\r\n                    className='form-control'\r\n                    type='text'\r\n                    onChange={(e) => {\r\n                      setNewTitle((newTitle = e.target.value));\r\n                    }}\r\n                  />\r\n                </label>\r\n              </div>\r\n              <div className='mb-3'>\r\n                <label className='container'>\r\n                  New description:\r\n                  <textarea\r\n                    className='form-control'\r\n                    onChange={(e) => {\r\n                      setNewDescription((newDescription = e.target.value));\r\n                    }}></textarea>\r\n                </label>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className='modal-footer'>\r\n            <button type='submit' className='btn btn-primary' form='changeForm'>\r\n              Save changes\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className='btn btn-outline-secondary'\r\n              onClick={() => {\r\n                setDataModal({\r\n                  display: \"none\",\r\n                  task: { id: \"\", title: \"\", description: \"\" },\r\n                });\r\n              }}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport ContainerTask from \"./ContainerTask\";\r\nimport Modal from \"./Modal\";\r\n\r\nexport default function ManageTasks() {\r\n  let [tasks, setTasks] = useState(undefined);\r\n  let [taskId, setTaskId] = useState(1);\r\n  let [dataModal, setDataModal] = useState({\r\n    display: \"none\",\r\n    task: { id:0, title: \"\", description:\"\" },\r\n  });\r\n  return (\r\n    <>\r\n      <CreateTask taskId={taskId} setTaskId={setTaskId} />\r\n      <ContainerTask\r\n        setTasks={setTasks}\r\n        tasks={tasks}\r\n        setTaskId={setTaskId}\r\n        taskId={taskId}\r\n        setDataModal={setDataModal}\r\n      />\r\n      ReactDOM.createPortal(\r\n      <Modal dataModal={dataModal} setDataModal={setDataModal}/>\r\n      ,document.getElementById(\"modal\"))\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Navbar from \"./components/Navbar\";\nimport ManageTasks from \"./components/ManageTasks\"\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar/>\n    <ManageTasks/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}